generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  email     String   @unique
  password  String
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  comments      Comment[] @relation("UserComments")
  profileComments Comment[] @relation("ProfileComments")
  tickets       Ticket[]  @relation("UserTickets")
  userBadges    UserBadge[]

  @@map("users")
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  user      User     @relation("UserComments", fields: [userId], references: [id])
  userId    Int
  profile   User     @relation("ProfileComments", fields: [profileId], references: [id])
  profileId Int
}

model Ticket {
  id          Int      @id @default(autoincrement())
  subject     String
  description String
  status      String?  @default("CevaplanmadÄ±")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation("UserTickets", fields: [userId], references: [id])
  userId      Int
}

model Badge {
  id          Int         @id @default(autoincrement())
  description String?
  icon        String?
  bgColor     String?      // Rozet arka plan rengi (hex veya rgb)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  userBadges  UserBadge[]
}

model UserBadge {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  badge     Badge    @relation(fields: [badgeId], references: [id])
  badgeId   Int
  assignedAt DateTime @default(now())

  @@unique([userId, badgeId])
}

model GalleryImage {
  id          Int      @id @default(autoincrement())
  imageUrl    String
  caption     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
